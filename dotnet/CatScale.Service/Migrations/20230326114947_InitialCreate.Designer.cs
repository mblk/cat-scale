// <auto-generated />
using System;
using CatScale.Service.DbModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CatScale.Service.Migrations
{
    [DbContext(typeof(CatScaleContext))]
    [Migration("20230326114947_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CatScale.Domain.Model.Cat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Cats");
                });

            modelBuilder.Entity("CatScale.Domain.Model.CatWeight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CatId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Weight")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("CatId");

                    b.ToTable("CatWeights");
                });

            modelBuilder.Entity("CatScale.Domain.Model.Cleaning", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Time")
                        .HasColumnType("double precision");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ToiletId")
                        .HasColumnType("integer");

                    b.Property<double>("Weight")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("ToiletId");

                    b.ToTable("Cleanings");
                });

            modelBuilder.Entity("CatScale.Domain.Model.Measurement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CatId")
                        .HasColumnType("integer");

                    b.Property<double>("CatWeight")
                        .HasColumnType("double precision");

                    b.Property<double>("CleanupTime")
                        .HasColumnType("double precision");

                    b.Property<double>("PooTime")
                        .HasColumnType("double precision");

                    b.Property<double>("PooWeight")
                        .HasColumnType("double precision");

                    b.Property<double>("SetupTime")
                        .HasColumnType("double precision");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ToiletId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CatId");

                    b.HasIndex("ToiletId");

                    b.ToTable("Measurements");
                });

            modelBuilder.Entity("CatScale.Domain.Model.Toilet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Toilets");
                });

            modelBuilder.Entity("CatScale.Domain.Model.CatWeight", b =>
                {
                    b.HasOne("CatScale.Domain.Model.Cat", "Cat")
                        .WithMany("Weights")
                        .HasForeignKey("CatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cat");
                });

            modelBuilder.Entity("CatScale.Domain.Model.Cleaning", b =>
                {
                    b.HasOne("CatScale.Domain.Model.Toilet", "Toilet")
                        .WithMany("Cleanings")
                        .HasForeignKey("ToiletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Toilet");
                });

            modelBuilder.Entity("CatScale.Domain.Model.Measurement", b =>
                {
                    b.HasOne("CatScale.Domain.Model.Cat", "Cat")
                        .WithMany("Measurements")
                        .HasForeignKey("CatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CatScale.Domain.Model.Toilet", "Toilet")
                        .WithMany("Measurements")
                        .HasForeignKey("ToiletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cat");

                    b.Navigation("Toilet");
                });

            modelBuilder.Entity("CatScale.Domain.Model.Cat", b =>
                {
                    b.Navigation("Measurements");

                    b.Navigation("Weights");
                });

            modelBuilder.Entity("CatScale.Domain.Model.Toilet", b =>
                {
                    b.Navigation("Cleanings");

                    b.Navigation("Measurements");
                });
#pragma warning restore 612, 618
        }
    }
}
