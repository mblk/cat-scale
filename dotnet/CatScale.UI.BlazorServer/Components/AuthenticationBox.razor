@inject IAuthenticationService AuthenticationService;

<AuthorizeView>
    <Authorized>
        <div class="d-inline-flex align-items-center">
            <div class="me-2 text-nowrap">Hello @context.User.Identity?.Name</div>
            <div class="input-group input-group-sm">
                <button class="btn btn-sm btn-secondary" @onclick="Logout">Logout</button>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="d-inline-flex">
            <div class="input-group input-group-sm">
                <input type="text" class="form-control form-control-sm" style="width: 100px" placeholder="Username" aria-label="Username" @bind="@_username">
                <input type="password" class="form-control form-control-sm" style="width: 100px" placeholder="Password" aria-label="Password" @bind="@_password">
                <button class="btn btn-sm btn-primary" @onclick="Login">Login</button>
            </div>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {

    private string? _username;
    private string? _password;

    private async Task Login()
    {
        try
        {
            if (_username is null || _password is null) return; // TODO show error

            await AuthenticationService.Login(_username, _password);
        }
        catch (Exception e)
        {
            Console.WriteLine(e.ToString());
            // TODO show error
        }
    }

    private async Task Logout()
    {
        try
        {
            await AuthenticationService.Logout();
        }
        catch (Exception e)
        {
            Console.WriteLine(e.ToString());
            // TODO show error
        }
    }
}