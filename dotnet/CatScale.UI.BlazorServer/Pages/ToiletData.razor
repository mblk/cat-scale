@page "/toilet/{Id:int}"
@using System.Diagnostics
@using CatScale.Service.Model.Toilet
@using CatScale.UI.BlazorServer.Services
@using CatScale.UI.BlazorServer.Utils
@inject ICatScaleService CatScaleService

<h3>Toilet @Id</h3>

@if (_toilet is null)
{
    <p>Loading ...</p>
}
else
{
    <p>Id: @_toilet.Id</p>
    <p>Name: @_toilet.Name</p>
    <p>Description: @_toilet.Description</p>

    <p>Cleanings:</p>
    <table class="table">
        <thead>
        <tr>
            <th>Id</th>
            <th>Timestamp</th>
            <th>Time</th>
            <th>Weight</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var cleaning in _toilet.Cleanings.OrderByDescending(c => c.Timestamp))
        {
            <tr>
                <td>@cleaning.Id</td>
                <td>@TimestampFormatter.Format(cleaning.Timestamp)</td>
                <td>@cleaning.Time s</td>
                <td>@cleaning.Weight g</td>
            </tr>
        }
        </tbody>
    </table>

    <p>Measurements:</p>
    <table class="table">
        <thead>
        <tr>
            <th>Id</th>
            <th>Timestamp</th>
            <th>Setup</th>
            <th>Poo</th>
            <th>Cleanup</th>
            <th>Cat</th>
            <th>Poo</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var measurement in _toilet.Measurements.OrderByDescending(m => m.Timestamp))
        {
            <tr>
                <td>@measurement.Id</td>
                <td>@TimestampFormatter.Format(measurement.Timestamp)</td>
                <td>@measurement.SetupTime s</td>
                <td>@measurement.PooTime s</td>
                <td>@measurement.CleanupTime s</td>
                <td>@measurement.CatWeight g</td>
                <td>@measurement.PooWeight g</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    [Parameter]
    public int Id { get; set; }
    
    private ToiletDto? _toilet;
    
    protected override async Task OnInitializedAsync()
    {
        try
        {
            Debug.WriteLine("ToiletData OnInitializedAsync");
            _toilet = await CatScaleService.GetToiletDetails(Id, ToiletDetails.All);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }
    }
}
