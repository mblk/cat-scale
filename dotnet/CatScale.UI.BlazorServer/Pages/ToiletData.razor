@page "/toilet/{Id:int}"
@using System.Diagnostics
@using CatScale.Service.Model.Toilet
@using CatScale.UI.BlazorServer.Services
@using CatScale.UI.BlazorServer.Utils
@inject ICatScaleService CatScaleService

<h3>Toilet @Id</h3>

@if (_toilet is null)
{
    <p>Loading ...</p>
}
else
{
    <p>Id: @_toilet.Id</p>
    <p>Name: @_toilet.Name</p>
    <p>Description: @_toilet.Description</p>

    @* <p>Events:</p> *@
    @* <table class="table"> *@
    @*     <thead> *@
    @*     <tr> *@
    @*         <th>Id</th> *@
    @*         <th>Start</th> *@
    @*         <th>End</th> *@
    @*         <th>Stable phases</th> *@
    @*         <th>Cleaning</th> *@
    @*         <th>Measurement</th> *@
    @*     </tr> *@
    @*     </thead> *@
    @*     <tbody> *@
    @*     @foreach (var e in _toilet.ScaleEvents.OrderByDescending(c => c.Start)) *@
    @*     { *@
    @*         <tr> *@
    @*             <td>@e.Id</td> *@
    @*             <td>@TimestampFormatter.Format(e.Start)</td> *@
    @*             <td>@TimestampFormatter.Format(e.End)</td> *@
    @*             <td>@(e.StablePhases?.Length ?? -1)</td> *@
    @*             <td>@(e.Cleaning!=null)</td> *@
    @*             <td>@(e.Measurement!=null)</td> *@
    @*         </tr> *@
    @*     } *@
    @*     </tbody> *@
    @* </table> *@
}

@code {
    [Parameter]
    public int Id { get; set; }
    
    private ToiletDto? _toilet;
    
    protected override async Task OnInitializedAsync()
    {
        try
        {
            _toilet = await CatScaleService.GetToiletDetails(Id);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }
    }
}
